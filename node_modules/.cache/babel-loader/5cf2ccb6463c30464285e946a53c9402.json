{"ast":null,"code":"var _jsxFileName = \"/Users/aymen/Desktop/My Work/miniprojet/src/TodoList.js\";\nimport React from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport SearchField from 'react-search-field';\nimport SideBar from './sideBar';\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nexport default class TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoToShow: \"all\",\n      toggleAllComplete: true,\n      searchTerm: \"\"\n    };\n\n    this.addTodo = todo => {\n      this.setState(state => ({\n        todos: [todo, ...state.todos]\n      }));\n    };\n\n    this.toggleComplete = id => {\n      this.setState(state => ({\n        todos: state.todos.map(todo => {\n          if (todo.id === id) {\n            // suppose to update\n            return { ...todo,\n              complete: !todo.complete\n            };\n          } else {\n            return todo;\n          }\n        })\n      }));\n    };\n\n    this.updateTodoToShow = s => {\n      this.setState({\n        todoToShow: s\n      });\n    };\n\n    this.handleDeleteTodo = id => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.removeAllTodosThatAreComplete = () => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => !todo.complete)\n      }));\n    };\n\n    this.editSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.dynamicSearch = () => {\n      let todos = this.state.todos;\n      return todos = this.state.todos.filter(todo => todo.title === this.state.searchTerm);\n    };\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"To Do\") {\n      todos = this.state.todos.filter(todo => todo.status === 'To Do');\n    } else if (this.state.todoToShow === \"In Progress\") {\n      todos = this.state.todos.filter(todo => todo.status === 'in Progress');\n    } else if (this.state.todoToShow === \"Done\") {\n      todos = this.state.todos.filter(todo => todo.status === 'Done');\n    }\n\n    console.log(todos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"sideBar\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"all\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"all\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"To Do\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"To Do\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"in Progress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"in Progress\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"Done\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Done\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchTerm,\n      onChange: this.editSearchTerm,\n      placeholder: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \" TITLE \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \" DESCRIPTION \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \" STATUS \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"  \")), todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n      key: todo.id,\n      toggleComplete: () => this.toggleComplete(todo.id),\n      onDelete: () => this.handleDeleteTodo(todo.id),\n      todo: todo,\n      status: todo.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))), this.state.todos.some(todo => todo.complete) ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.removeAllTodosThatAreComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"remove all complete todos\")) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/aymen/Desktop/My Work/miniprojet/src/TodoList.js"],"names":["React","TodoForm","Todo","SearchField","SideBar","TodoList","Component","state","todos","todoToShow","toggleAllComplete","searchTerm","addTodo","todo","setState","toggleComplete","id","map","complete","updateTodoToShow","s","handleDeleteTodo","filter","removeAllTodosThatAreComplete","editSearchTerm","e","target","value","dynamicSearch","title","render","status","console","log","some"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport SearchField from 'react-search-field';\nimport SideBar from './sideBar'\n\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nexport default class TodoList extends React.Component {\n  state = {\n    todos: [],\n    todoToShow: \"all\",\n    toggleAllComplete: true,\n    searchTerm:\"\"\n  };\n\n  addTodo = todo => {\n    this.setState(state => ({\n      todos: [todo, ...state.todos]\n    }));\n  };\n\n  toggleComplete = id => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => {\n        if (todo.id === id) {\n          // suppose to update\n          return {\n            ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      })\n    }));\n  };\n\n  updateTodoToShow = s => {\n    this.setState({\n      todoToShow: s\n    });\n  };\n\n  handleDeleteTodo = id => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id)\n    }));\n  };\n\n  removeAllTodosThatAreComplete = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.complete)\n    }));\n  };\n\n  editSearchTerm = (e) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  dynamicSearch = () => {\n    let todos = this.state.todos;\n    return todos = this.state.todos.filter(todo => todo.title === this.state.searchTerm );\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"To Do\") {\n      todos = this.state.todos.filter(todo => todo.status==='To Do');\n    } else if (this.state.todoToShow === \"In Progress\") {\n      todos = this.state.todos.filter(todo => todo.status==='in Progress');\n    } else if (this.state.todoToShow === \"Done\") {\n      todos = this.state.todos.filter(todo => todo.status==='Done');\n    }\n    \n\n    console.log(todos)\n    return (\n      <div>\n        <sideBar/>\n        <div>\n          <button onClick={() => this.updateTodoToShow(\"all\")}>all</button>\n          <button onClick={() => this.updateTodoToShow(\"To Do\")}>\n            To Do\n          </button>\n          <button onClick={() => this.updateTodoToShow(\"in Progress\")}>\n            in Progress\n          </button>\n          <button onClick={() => this.updateTodoToShow(\"Done\")}>\n            Done\n          </button>\n        </div>\n        <input type='text' value={this.state.searchTerm} onChange={this.editSearchTerm} placeholder='search' />\n        <TodoForm onSubmit={this.addTodo} />\n        <table>\n            <tr>\n              <th> TITLE </th>\n              <th> DESCRIPTION </th>\n              <th> STATUS </th>\n              <th>  </th>\n            </tr>\n          {todos.map(todo => (\n            <Todo\n              key={todo.id}\n              toggleComplete={() => this.toggleComplete(todo.id)}\n              onDelete={() => this.handleDeleteTodo(todo.id)}\n              todo={todo}\n              status={todo.status}\n            />\n          ))}\n        </table>\n        \n        \n        {this.state.todos.some(todo => todo.complete) ? (\n          <div>\n            <button onClick={this.removeAllTodosThatAreComplete}>\n              remove all complete todos\n            </button>\n          </div>\n        ) : null}\n        \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}