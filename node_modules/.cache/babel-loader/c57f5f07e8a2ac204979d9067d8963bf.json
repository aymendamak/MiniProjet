{"ast":null,"code":"var _jsxFileName = \"/Users/aymen/Desktop/My Work/miniprojet/src/TodoList.js\";\nimport React from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nexport default class TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoToShow: \"all\",\n      toggleAllComplete: true\n    };\n\n    this.addTodo = todo => {\n      this.setState(state => ({\n        todos: [todo, ...state.todos]\n      }));\n    };\n\n    this.toggleComplete = id => {\n      this.setState(state => ({\n        todos: state.todos.map(todo => {\n          if (todo.id === id) {\n            // suppose to update\n            return { ...todo,\n              complete: !todo.complete\n            };\n          } else {\n            return todo;\n          }\n        })\n      }));\n    };\n\n    this.updateTodoToShow = s => {\n      this.setState({\n        todoToShow: s\n      });\n    };\n\n    this.handleDeleteTodo = id => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.removeAllTodosThatAreComplete = () => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => !todo.complete)\n      }));\n    };\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"active\") {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todoToShow === \"complete\") {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \" Nom \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \" Delete \")), todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n      key: todo.id,\n      toggleComplete: () => this.toggleComplete(todo.id),\n      onDelete: () => this.handleDeleteTodo(todo.id),\n      todo: todo,\n      status: todo.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"todos left: \", this.state.todos.filter(todo => !todo.complete).length), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"all\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"all\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"active\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"active\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"complete\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"complete\")), this.state.todos.some(todo => todo.complete) ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.removeAllTodosThatAreComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"remove all complete todos\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState(state => ({\n        todos: state.todos.map(todo => ({ ...todo,\n          complete: state.toggleAllComplete\n        })),\n        toggleAllComplete: !state.toggleAllComplete\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"toggle all complete: \", `${this.state.toggleAllComplete}`)));\n  }\n\n}","map":{"version":3,"sources":["/Users/aymen/Desktop/My Work/miniprojet/src/TodoList.js"],"names":["React","TodoForm","Todo","TodoList","Component","state","todos","todoToShow","toggleAllComplete","addTodo","todo","setState","toggleComplete","id","map","complete","updateTodoToShow","s","handleDeleteTodo","filter","removeAllTodosThatAreComplete","render","status","length","some"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nexport default class TodoList extends React.Component {\n  state = {\n    todos: [],\n    todoToShow: \"all\",\n    toggleAllComplete: true\n  };\n\n  addTodo = todo => {\n    this.setState(state => ({\n      todos: [todo, ...state.todos]\n    }));\n  };\n\n  toggleComplete = id => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => {\n        if (todo.id === id) {\n          // suppose to update\n          return {\n            ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      })\n    }));\n  };\n\n  updateTodoToShow = s => {\n    this.setState({\n      todoToShow: s\n    });\n  };\n\n  handleDeleteTodo = id => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id)\n    }));\n  };\n\n  removeAllTodosThatAreComplete = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.complete)\n    }));\n  };\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"active\") {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todoToShow === \"complete\") {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    return (\n      <div>\n        <TodoForm onSubmit={this.addTodo} />\n        <table>\n            <tr>\n              <th> Nom </th>\n              <th> Delete </th>\n            </tr>\n        \n          {todos.map(todo => (\n            <Todo\n              key={todo.id}\n              toggleComplete={() => this.toggleComplete(todo.id)}\n              onDelete={() => this.handleDeleteTodo(todo.id)}\n              todo={todo}\n              status={todo.status}\n            />\n          ))}\n        </table>\n        <div>\n          todos left: {this.state.todos.filter(todo => !todo.complete).length}\n        </div>\n        <div>\n          <button onClick={() => this.updateTodoToShow(\"all\")}>all</button>\n          <button onClick={() => this.updateTodoToShow(\"active\")}>\n            active\n          </button>\n          <button onClick={() => this.updateTodoToShow(\"complete\")}>\n            complete\n          </button>\n        </div>\n        {this.state.todos.some(todo => todo.complete) ? (\n          <div>\n            <button onClick={this.removeAllTodosThatAreComplete}>\n              remove all complete todos\n            </button>\n          </div>\n        ) : null}\n        <div>\n          <button\n            onClick={() =>\n              this.setState(state => ({\n                todos: state.todos.map(todo => ({\n                  ...todo,\n                  complete: state.toggleAllComplete\n                })),\n                toggleAllComplete: !state.toggleAllComplete\n              }))\n            }\n          >\n            toggle all complete: {`${this.state.toggleAllComplete}`}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}